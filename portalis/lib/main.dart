import 'package:flutter/material.dart';
import 'bridge_generated/frb_generated.dart';
import 'bridge_generated/lib.dart';

Future<void> main() async {
  // Rely on flutter_rust_bridge's default external library loader for all platforms.
  await RustLib.init();
  runApp(const MyApp());
}
class MyApp extends StatefulWidget {
  const MyApp({super.key, this.loadOnStart = true});

  final bool loadOnStart;

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  String _version = 'Loadingâ€¦';

  @override
  void initState() {
    super.initState();
    if (widget.loadOnStart) {
      _loadVersion();
    }
  }

  void _loadVersion() {
    try {
      final version = getVersion(); // sync call generated by FRB
      setState(() => _version = version);
    } catch (e) {
      setState(() => _version = 'Error: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: const Text('Portalis')),
        body: Center(child: Text('Rust says: $_version')),
      ),
    );
  }
}
