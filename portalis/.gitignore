# Miscellaneous
*.class
*.log
*.pyc
*.swp
.DS_Store
.atom/
.buildlog/
.history
.svn/
migrate_working_dir/

# IntelliJ related
*.iml
*.ipr
*.iws
.idea/

# The .vscode folder contains launch configuration and tasks you configure in
# VS Code which you may wish to be included in version control, so this line
# is commented out by default.
#.vscode/

# Flutter/Dart/Pub related
**/doc/api/
**/ios/Flutter/.last_build_id
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
.pub-cache/
.pub/
/build/

# Symbolication related
app.*.symbols

# Obfuscation related
app.*.map.json

# Android Studio will place build artifacts here
/android/app/debug
/android/app/profile
/android/app/release

# # # # #
# RUST

# Generated by Cargo
# will have compiled files and executables
debug/
target/
**/debug/
**/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock
**/Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# # # # #
# Generated native binaries / artifacts

# iOS frameworks built by script (keep folder, ignore contents)
ios/Frameworks/*
!ios/Frameworks/.gitkeep

# Android JNI libs built by cargo-ndk
android/app/src/main/jniLibs/

# Web wasm glue
web/pkg/

# macOS Xcode build dir checked-in by mistake sometimes
macos/build/

# Dynamic libraries anywhere in the tree (build artifacts)
**/*.so
**/*.dylib
**/*.dll

# Flutter ephemeral outputs that can appear
ios/Flutter/ephemeral/
macos/Flutter/ephemeral/
linux/flutter/ephemeral/
windows/flutter/ephemeral/
android/.cxx/
android/app/.cxx/
